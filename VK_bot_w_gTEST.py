import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from VK_class import My_VkApi
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import json
from db_tools import DB_editor
from VK_class import get_top3_likes


def write_msg(user_id: int, message: str, keyboard=None, attachment=None):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    vk.method('messages.send', {
        'user_id': user_id,
        'message': message,
        'random_id': 0,
        'keyboard': keyboard,
        'attachment': attachment
    })


# –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∫–∞–∫ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
with open('token.json', 'r') as file:
    data_json = json.load(file)
    group_access_token = data_json["group_access_token"]
    access_token = data_json["access_token"]
    user_token = data_json["access_token"]

vk = vk_api.VkApi(token=group_access_token)

# –†–∞–±–æ—Ç–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
longpoll = VkLongPoll(vk)
print('Bot is running')


# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def start_buttons():
    keyboard = VkKeyboard(one_time=True)  # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard.add_button('–ü–æ–∏—Å–∫ –ø–∞—Ä—ã', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button('–ü—Ä–∞–≤–∏–ª–∞', color=VkKeyboardColor.PRIMARY)
    keyboard.add_line()  
    keyboard.add_button('–°–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥', color=VkKeyboardColor.SECONDARY)
    return keyboard.get_keyboard()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–æ –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—ã
def create_keyboard():
    keyboard = VkKeyboard(one_time=True)  # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard.add_button('–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', color=VkKeyboardColor.NEGATIVE)
    keyboard.add_line()  
    keyboard.add_button('–î–æ–±–∞–≤–∏—Ç—å –≤ –ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫', color=VkKeyboardColor.SECONDARY)
    keyboard.add_button('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', color=VkKeyboardColor.PRIMARY)
    keyboard.add_line()
    keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', color=VkKeyboardColor.PRIMARY)

    return keyboard.get_keyboard()

instructions = (
                    "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –ª—é–¥–µ–π –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ü•∞\n\n"
                    "1. **–ü–æ–∏—Å–∫ –ø–∞—Ä—ã**: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–∏—Å–∫ –ø–∞—Ä—ã¬ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ üë§. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π –¥–ª—è –æ–±—â–µ–Ω–∏—è!\n\n"
                    "2. **–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ**: –ï—Å–ª–∏ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –∫—Ç–æ-—Ç–æ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ ¬´–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ¬ª üíñ, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ—Ñ–∏–ª—å.\n\n"
                    "3. **–î–æ–±–∞–≤–∏—Ç—å –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫**: –ï—Å–ª–∏ –≤—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å –∫–æ—Ç–æ—Ä—ã–º –Ω–µ —Ö–æ—Ç–∏—Ç–µ –æ–±—â–∞—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ ¬´–î–æ–±–∞–≤–∏—Ç—å –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫¬ª üö´, —á—Ç–æ–±—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ.\n\n"
                    "4. **–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ**: –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ—Ö, –∫–æ–≥–æ –≤—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ¬ª üîç.\n\n"
                    "5. **–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å**: –ï—Å–ª–∏ –≤—ã –Ω–µ —Ö–æ—Ç–∏—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Ç–µ–∫—É—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª ‚è≠Ô∏è.\n\n"
                    "‚ú® **–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å!** üòä"
                )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def photo_generator(user_list: list):
    for user_id in user_list:
        yield user_id  # –±–µ—Ä–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω—ã—Ö


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def next_found_user_message(user_id: int):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ black list
    blocked_list = user_database.get_black_list_user_id(user_vk_id)
    try:
        if user_id not in blocked_list or len(blocked_list) == 0:
            found_user_fio = My_VkApi(access_token).get_short_user_info(user_id)
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            found_user_photos = My_VkApi(access_token).get_user_photos(user_id)
            # –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–ø 3 –ª–∞–∏ÃÜ–∫–Ω—É–≤—à–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            top3_user_photos = get_top3_likes(found_user_photos)
            write_msg(event.user_id,
                    f"{str(found_user_fio)}\nhttps://vk.com/id{user_id}",
                    create_keyboard(),
                    attachment=f"{top3_user_photos}")
            return user_id, found_user_fio, top3_user_photos
        else:
            next_found_user_message(next(all_found_users_generator))
    except Exception as e:
            write_msg(event.user_id, f"Error fetching new user: {e}")
            return None

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
state_configed = False

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
for event in longpoll.listen():
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if event.type == VkEventType.MESSAGE_NEW:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ –±–æ—Ç—É
        if event.to_me:
            user_info = My_VkApi(group_access_token).get_user_info(event.user_id)
            user_sex = user_info[event.user_id]["sex"]
            user_age = user_info[event.user_id]["age"]
            opposite_sex = (
                2 if user_sex == "–ñ–µ–Ω—Å–∫–∏–π" else 1
            )  # –≤—ã–±–∏—Ä–∞–µ–º –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π –ø–æ–ª
            age_min = (
                user_age - 10 if user_age - 10 >= 16 else 16
            )  # –≤—ã–±–∏—Ä–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç
            age_max = user_age + 5

            user_vk_id = event.user_id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_vk_sex = 2 if user_sex == "–ñ–µ–Ω—Å–∫–∏–π" else 1
            user_database = DB_editor()  # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –ë–î

            if not user_database.get_user_city(event.user_id):
                user_city = user_info[event.user_id].get(
                    "city", "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"
                )  # –ò—Å–ø–æ–ª—å–∑—É–µ–º get –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
            else:
                user_city = user_database.get_user_city(event.user_id)

            user_database.register_user(user_vk_id, user_age, user_vk_sex, user_city)
            # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –∏–∑–≤–µ—Å—Ç–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
            if not user_database.get_user_city(event.user_id) == "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω":
                # –ï—Å–ª–∏ –±–æ—Ç –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if state_configed is False:
                    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    user_city = user_database.get_user_city(
                        event.user_id
                    )
                    all_found_users = My_VkApi(user_token).search_users(
                        opposite_sex, age_min, age_max, user_city
                    )
                    # —Å–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
                    all_found_users_generator = photo_generator(all_found_users)
                    state_configed = True  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–µ–ø–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω

                if state_configed:
                    user_request = event.text.lower()
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if user_request == "–ø–æ–∏—Å–∫ –ø–∞—Ä—ã":
                        try:
                            # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                            (
                                user_id,
                                found_user_fio,
                                top3_user_photos,
                            ) = next_found_user_message(next(all_found_users_generator))
                        except TypeError:
                            write_msg(event.user_id, "–ë–æ–ª—å—à–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.")

                    elif user_request == "–ø—Ä–∞–≤–∏–ª–∞":
                        write_msg(event.user_id, instructions, start_buttons())

                    elif user_request == "—Å–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥":
                        # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≥–æ—Ä–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        user_database.update_user_city(event.user_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")
                        write_msg(event.user_id, "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥", start_buttons())

                    elif user_request == "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
                        try:
                            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ
                            (
                                user_id,
                                found_user_fio,
                                top3_user_photos,
                            ) = next_found_user_message(next(all_found_users_generator))
                        except StopIteration:
                            write_msg(event.user_id, "–ë–æ–ª—å—à–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.")
                            state_configed = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                            write_msg(
                                event.user_id,
                                "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                                start_buttons(),
                            )

                    elif user_request == "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
                        write_msg(
                            event.user_id,
                            f"https://vk.com/id{user_id}\n–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",
                            create_keyboard(),
                        )
                        user_database.add_to_favourites(
                            user_vk_id,
                            found_user_fio.split()[0],
                            found_user_fio.split()[1],
                            user_id,
                            "{" + "".join(top3_user_photos.split()) + "}",
                        )
                        # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                        (
                            user_id,
                            found_user_fio,
                            top3_user_photos,
                        ) = next_found_user_message(next(all_found_users_generator))

                    elif user_request == "–¥–æ–±–∞–≤–∏—Ç—å –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫":
                        write_msg(
                            event.user_id,
                            f"https://vk.com/id{user_id}\n–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫",
                            create_keyboard(),
                        )
                        user_database.add_to_black_list(user_vk_id, user_id)
                        # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                        (
                            user_id,
                            found_user_fio,
                            top3_user_photos,
                        ) = next_found_user_message(next(all_found_users_generator))

                    elif user_request == "–ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
                        user_favourites = user_database.get_favourites(user_vk_id)
                        favourites_list = [
                            f"{favourite['name']} {favourite['last_name']}: https://vk.com/id{favourite['url']}"
                            for favourite in user_favourites
                        ]
                        favourites_message = "\n".join(favourites_list)
                        write_msg(
                            event.user_id,
                            f"–í–∞—à —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:\n\n{favourites_message}",
                            start_buttons(),
                        )

                    elif user_request == "–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                        write_msg(
                            event.user_id,
                            "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                            start_buttons(),
                        )

                    else:
                        write_msg(
                            event.user_id,
                            "–ù–µ –ø–æ–Ω—è–ª–∞ –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞... –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫:",
                            start_buttons(),
                        )

            # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –µ—â–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–º–µ–Ω—ã –≥–æ—Ä–æ–¥–∞
            elif user_database.get_user_city(event.user_id) == "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω":
                user_request = event.text
                found_city = My_VkApi(access_token).search_city(user_request)
                if user_request.lower() == "–ø—Ä–∞–≤–∏–ª–∞":
                    write_msg(event.user_id, instructions, start_buttons())
                elif found_city == "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω":
                    write_msg(event.user_id, "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥", start_buttons())
                elif not found_city == "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω":
                    write_msg(
                        event.user_id, f"–í—ã–±—Ä–∞–Ω –≥–æ—Ä–æ–¥: {found_city}", start_buttons()
                    )
                    user_database.update_user_city(event.user_id, found_city)
                    state_configed = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞
                    continue  # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –≤—ã–±—Ä–∞–Ω - –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
            # –ï—Å–ª–∏ –≤–≤–µ–ª–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ
            else:
                write_msg(event.user_id, "–ù–µ –ø–æ–Ω—è–ª–∞ –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞...", start_buttons())