import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from VK_class import My_VkApi
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import json
from db_tools import DB_editor
from VK_class import get_top3_likes


class VkBot:
    """
    –ö–ª–∞—Å—Å VkBot –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ,
    —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç-–±–æ—Ç–æ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–±—ã—Ç–∏–π –∏ –∫–æ–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

    –ú–µ—Ç–æ–¥—ã:
    write_msg: –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∏ –≤–ª–æ–∂–µ–Ω–∏—è–º–∏.
    start_buttons: –°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –±–æ—Ç–∞.
    create_keyboard: –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—ã.
    create_favourite_keyboard: –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã–º.
    create_black_list_keyboard: –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö.
    photo_generator: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Å–ø–∏—Å–∫–∞.
    start_bot: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    next_found_user_message: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –Ω–∞–ª–∏—á–∏–µ –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.
    send_next_photo: –ü–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–π.
    handle_add_to_favourites: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.
    handle_add_to_blacklist: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫.
    handle_city_request: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –≥–æ—Ä–æ–¥–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
    view_favourites: –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏—Ö —Å–ø–∏—Å–∫–∞.
    process_event: –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.
    
    """

    def __init__(self, token_file: str) -> None:
        with open(token_file, 'r') as file:
            data_json = json.load(file)
            self.group_access_token = data_json["group_access_token"]
            self.access_token = data_json["access_token"]
            self.user_token = self.access_token
            
        self.vk = vk_api.VkApi(token=self.group_access_token)
        self.longpoll = VkLongPoll(self.vk)
        self.database = DB_editor()
        self.all_found_users_generator = None
        self.user_vk_id = None

        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.instructions = (
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –ª—é–¥–µ–π –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ü•∞\n\n"
            "1. –ü–æ–∏—Å–∫ –ø–∞—Ä—ãüîç: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–∏—Å–∫ –ø–∞—Ä—ã¬ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π –¥–ª—è –æ–±—â–µ–Ω–∏—è!\n\n"
            "2. –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ‚ù§Ô∏è: –ï—Å–ª–∏ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –∫—Ç–æ-—Ç–æ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ ¬´–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ¬ª, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ—Ñ–∏–ª—å.\n\n"
            "3. –î–æ–±–∞–≤–∏—Ç—å –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫‚õîÔ∏è: –ï—Å–ª–∏ –≤—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å –∫–æ—Ç–æ—Ä—ã–º –Ω–µ —Ö–æ—Ç–∏—Ç–µ –æ–±—â–∞—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ ¬´–î–æ–±–∞–≤–∏—Ç—å –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫¬ª, —á—Ç–æ–±—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ.\n\n"
            "4. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µüßæ: –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ—Ö, –∫–æ–≥–æ –≤—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ¬ª.\n\n"
            "5. –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å‚è≠: –ï—Å–ª–∏ –≤—ã –Ω–µ —Ö–æ—Ç–∏—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Ç–µ–∫—É—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª.\n\n"
            "‚ú® –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å!üòä"
        )

    def write_msg(self, user_id: int, message: str, keyboard=None, attachment=None) -> None:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∏ –≤–ª–æ–∂–µ–Ω–∏—è–º–∏.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            user_id (int): –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ.
            message (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
            keyboard: –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è.
            attachment: –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            None
        """
        self.vk.method('messages.send', {
            'user_id': user_id,
            'message': message,
            'random_id': 0,
            'keyboard': keyboard,
            'attachment': attachment
        })

    def start_buttons(self):
        """
        –°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –±–æ—Ç–∞.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        """
        keyboard = VkKeyboard(one_time=True)
        keyboard.add_button('–ü–æ–∏—Å–∫ –ø–∞—Ä—ã', color=VkKeyboardColor.POSITIVE)
        keyboard.add_button('–ü—Ä–∞–≤–∏–ª–∞', color=VkKeyboardColor.PRIMARY)
        keyboard.add_line()  
        keyboard.add_button('–°–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥', color=VkKeyboardColor.SECONDARY)
        return keyboard.get_keyboard()

    def create_keyboard(self):
        """
        –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—ã.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        """
        keyboard = VkKeyboard(one_time=True)  # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard.add_button('–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', color=VkKeyboardColor.POSITIVE)
        keyboard.add_button('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', color=VkKeyboardColor.NEGATIVE)
        keyboard.add_line()  
        keyboard.add_button('–î–æ–±–∞–≤–∏—Ç—å –≤ –ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫', color=VkKeyboardColor.SECONDARY)
        keyboard.add_button('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', color=VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', color=VkKeyboardColor.PRIMARY)
        return keyboard.get_keyboard()

    def create_favourite_keyboard(self):
        """
        –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã–º.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        """
        keyboard = {
            "inline": True,
            "buttons": [
                [
                    {"action": {"type": "text", "label": "–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫"}, "color": "negative"},
                    {"action": {"type": "text", "label": "–£–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å"}, "color": "primary"},
                ],
                [
                    {"action": {"type": "text", "label": "–ü–æ–∏—Å–∫ –ø–∞—Ä—ã"}, "color": "positive"},
                    {"action": {"type": "text", "label": "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"}, "color": "default"},
                ] 
            ]       
        }
        return json.dumps(keyboard)  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ JSON-—Å—Ç—Ä–æ–∫—É –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π

    def create_black_list_keyboard(self):
        """
        –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        """
        keyboard = {
            "inline": True,
            "buttons": [
                [
                    {"action": {"type": "text", "label": "–û—á–∏—Å—Ç–∏—Ç—å black list"}, "color": "negative"},
                    {"action": {"type": "text", "label": "–£–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"}, "color": "primary"},
                ],
                [
                    {"action": {"type": "text", "label": "–ü–æ–∏—Å–∫ –ø–∞—Ä—ã"}, "color": "positive"},
                    {"action": {"type": "text", "label": "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"}, "color": "default"},
                ] 
            ]       
        }
        return json.dumps(keyboard) 

    def photo_generator(self, user_list: list):
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Å–ø–∏—Å–∫–∞.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            user_list (list): –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        """
        for user_id in user_list:
            yield user_id  # –±–µ—Ä–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω—ã—Ö

    def start_bot(self, user_id: int) -> tuple:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            user_id (int): –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            –ö–æ—Ä—Ç–µ–∂ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (ID, –ø–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç, –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π –ø–æ–ª, –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, –≥–æ—Ä–æ–¥, —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö).
        """
        user_id = event.user_id
        user_info = My_VkApi(self.group_access_token).get_user_info(user_id)
        user_sex = user_info[user_id]["sex"]
        user_age = user_info[user_id]["age"]
        opposite_sex = (
            2 if user_sex == "–ñ–µ–Ω—Å–∫–∏–π" else 1
        )  # –≤—ã–±–∏—Ä–∞–µ–º –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π –ø–æ–ª
        age_min = (
            user_age - 10 if user_age - 10 >= 16 else 16
        )  # –≤—ã–±–∏—Ä–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç
        age_max = user_age + 5

        user_vk_id = user_id  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_vk_sex = 2 if user_sex == "–ñ–µ–Ω—Å–∫–∏–π" else 1

        user_city = user_info[user_id]['city_id']

        # if not self.database.get_user_city(user_id):
        #     user_city = user_info[user_id].get(
        #         "city", "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"
        #     )  # –ò—Å–ø–æ–ª—å–∑—É–µ–º get –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
        # else:
        #     user_city = self.database.get_user_city(user_id)

        self.database.register_user(user_vk_id, user_age, user_vk_sex, user_city)
        return user_vk_id, user_sex, user_age, opposite_sex, age_min, age_max, user_city, self.database

    def next_found_user_message(self, user_id: int) -> tuple:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –Ω–∞–ª–∏—á–∏–µ –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            user_id (int): –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ –∫–æ—Ç–æ—Ä–æ–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            –ö–æ—Ä—Ç–µ–∂ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ–≥–æ –§–ò–û –∏ —Ç–æ–ø-3 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ
            –æ—à–∏–±–∫–∏ –∏–ª–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.
        """
        blocked_list = self.database.get_black_list_user_id(event.user_id) # —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
        blocked_list.extend([int(favourite['url']) for favourite in self.database.get_favourites(event.user_id)]) # —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
        try:
            if user_id not in blocked_list:
                found_user_fio = My_VkApi(self.access_token).get_short_user_info(user_id)
                # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                found_user_photos = My_VkApi(self.access_token).get_user_photos(user_id)
                # –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–ø 3 –ª–∞–∏ÃÜ–∫–Ω—É–≤—à–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                top3_user_photos = get_top3_likes(found_user_photos)
                self.write_msg(event.user_id,
                        f"{str(found_user_fio)}\nhttps://vk.com/id{user_id}",
                        self.create_keyboard(),
                        attachment=f"{top3_user_photos}")
                return user_id, found_user_fio, top3_user_photos
            else:
                self.next_found_user_message(next(self.all_found_users_generator))
        except Exception as e:
                self.write_msg(event.user_id, f"Error fetching new user: {e}")
                return None
        
    def send_next_photo(self, event_user_id: int, all_found_users_generator) -> tuple:
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–π.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            event_user_id (int): ID —Å–æ–±—ã—Ç–∏—è, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–ª—É—á–∞—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ.
            all_found_users_generator: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            tuple: user_id, found_user_fio, top3_user_photos –∏–ª–∏ (None, None, None) –≤ —Å–ª—É—á–∞–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è.
        """
        try:
            user_id, found_user_fio, top3_user_photos = self.next_found_user_message(next(all_found_users_generator))
            return user_id, found_user_fio, top3_user_photos
        except (StopIteration, TypeError) as e:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
            if isinstance(e, StopIteration):
                self.write_msg(event_user_id, "–ë–æ–ª—å—à–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.", self.start_buttons())
            elif isinstance(e, TypeError):
                self.write_msg(event_user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.", self.start_buttons())
            return None, None, None  # –í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, —á—Ç–æ–±—ã –Ω–µ –≤—ã–∑—ã–≤–∞–ª–∞—Å—å –æ—à–∏–±–∫–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏

    def handle_add_to_favourites(self, event_user_id: int, user_id: int, found_user_fio: str, top3_user_photos: str) -> None:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            event_user_id (int): ID —Å–æ–±—ã—Ç–∏—è, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–ª—É—á–∞—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ.
            user_id (int): ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª—è—é—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.
            found_user_fio (str): –§–ò–û –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            top3_user_photos (str): –°—Ç—Ä–æ–∫–∞ —Å URL-—Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ç—Ä–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            None
        """
        try:
            self.database.add_to_favourites(event_user_id, found_user_fio.split()[0], found_user_fio.split()[1], user_id, "{" + "".join(top3_user_photos.split()) + "}")
            self.write_msg(event_user_id, f"https://vk.com/id{user_id}\n–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", self.create_keyboard())
        except StopIteration:
            self.write_msg(event_user_id, "–ë–æ–ª—å—à–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.", self.start_buttons())

    def handle_add_to_blacklist(self, event_user_id: int, user_id: int) -> None:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            event_user_id (int): ID —Å–æ–±—ã—Ç–∏—è, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–ª—É—á–∞—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ.
            user_id (int): ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            None
        """
        try:
            self.database.add_to_black_list(event_user_id, user_id)
            self.write_msg(event_user_id, f"https://vk.com/id{user_id}\n–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫", self.create_black_list_keyboard())
        except StopIteration:
            self.write_msg(event_user_id, "–ë–æ–ª—å—à–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π", self.start_buttons())

    def handle_city_request(self, event_user_id: int) -> bool:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –≥–æ—Ä–æ–¥–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            event_user_id (int): ID —Å–æ–±—ã—Ç–∏—è, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–ª—É—á–∞—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            bool: –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (False - —Å–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞).
        """
        user_request = event.text
        found_city = My_VkApi(self.access_token).search_city(user_request)
        if event.text:
            if user_request.lower() == "–ø—Ä–∞–≤–∏–ª–∞":
                self.write_msg(event.user_id, self.instructions, self.start_buttons())
            elif found_city == "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω":
                self.write_msg(event.user_id, "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥", self.start_buttons())
            elif not found_city == "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω":
                self.write_msg(
                    event_user_id, f"–í—ã–±—Ä–∞–Ω –≥–æ—Ä–æ–¥: {found_city}", self.start_buttons()
                )
                self.database.update_user_city(event.user_id, found_city)
                state_configed = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞
                return state_configed
        else:
            self.write_msg(event.user_id, "–ù–µ –ø–æ–Ω—è–ª–∞ –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞...", self.start_buttons())

    def view_favourites(self, event_user_id) -> None:
        """
        –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏—Ö —Å–ø–∏—Å–∫–∞.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            event_user_id (int): ID —Å–æ–±—ã—Ç–∏—è, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–ª—É—á–∞—é—â–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            None
        """
        user_favourites = self.database.get_favourites(event_user_id)
        favourites_list = [
            f"{favourite['name']} {favourite['last_name']}: https://vk.com/id{favourite['url']}"
            for favourite in user_favourites
        ]

        favourites_message = "\n".join(favourites_list) if favourites_list else "–í–∞—à —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É—Å—Ç."    
        self.write_msg(
            event_user_id,
            f"–í–∞—à —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:\n\n{favourites_message}",
            self.create_favourite_keyboard()
        )

    def process_event(self, event: VkEventType) -> None:
        """
        –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.

        –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. 
        –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–≤–æ–µ –∏ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ –±–æ—Ç—É, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ 
        –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.

        """

        if event.type == VkEventType.MESSAGE_NEW and event.to_me:
            user_vk_id, self.user_sex, self.user_age, opposite_sex, age_min, age_max, user_city, self.database = self.start_bot(event.user_id)
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
            state_configed = False
            # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –∏–∑–≤–µ—Å—Ç–µ–Ω, —Ç–æ –∑–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if self.database.get_user_city(event.user_id) != "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω":
                if not state_configed: # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                    # user_city = self.database.get_user_city(user_vk_id)
                    all_found_users = My_VkApi(self.user_token).search_users(opposite_sex, age_min, age_max, int(user_city))
                    all_found_users_generator = self.photo_generator(all_found_users)
                    state_configed = True
                # –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_request = event.text.lower()
                if state_configed:
                    if user_request == "–ø–æ–∏—Å–∫ –ø–∞—Ä—ã":
                        self.user_id, self.found_user_fio, self.top3_user_photos = self.send_next_photo(event.user_id, all_found_users_generator)
                    elif user_request == "–ø—Ä–∞–≤–∏–ª–∞":
                        self.write_msg(event.user_id, self.instructions, self.start_buttons())
                    elif user_request == "—Å–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥": 
                        self.database.update_user_city(event.user_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")
                        self.write_msg(event.user_id, "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥", self.start_buttons())
                        state_configed = False
                    elif user_request == "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
                        self.user_id, self.found_user_fio, self.top3_user_photos = self.send_next_photo(event.user_id, all_found_users_generator)
                    elif user_request == "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
                        self.handle_add_to_favourites(event.user_id, self.user_id, self.found_user_fio, self.top3_user_photos)
                        self.user_id, self.found_user_fio, self.top3_user_photos = self.send_next_photo(event.user_id, all_found_users_generator)
                    elif user_request == "–¥–æ–±–∞–≤–∏—Ç—å –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫":
                        self.handle_add_to_blacklist(event.user_id, self.user_id)
                    elif user_request == "–ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
                        self.view_favourites(event.user_id)
                    elif user_request == "–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                        self.write_msg(event.user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", self.start_buttons())
                    elif user_request == '–æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫':
                        self.database.delete_all_favourites(event.user_id)
                        self.write_msg(event.user_id, "–£–¥–∞–ª—è–µ–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫", self.start_buttons())
                    elif user_request == '—É–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å':
                        self.database.delete_last_favourite(event.user_id)
                        self.write_msg(event.user_id, "–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞", self.start_buttons())
                    elif user_request == '–æ—á–∏—Å—Ç–∏—Ç—å black list':
                        self.database.delete_all_blocked(event.user_id)
                        self.write_msg(event.user_id, "–£–¥–∞–ª—è–µ–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫", self.start_buttons())
                    elif user_request == '—É–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
                        self.database.delete_last_blocked(event.user_id)
                        self.write_msg(event.user_id, "–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞", self.start_buttons())
                    else:
                        self.write_msg(event.user_id, "–ù–µ –ø–æ–Ω—è–ª–∞ –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞... –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫:", self.start_buttons())
            # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –µ—â–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–º–µ–Ω—ã –≥–æ—Ä–æ–¥–∞
            elif self.database.get_user_city(event.user_id) == "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω":
                self.handle_city_request(event.user_id)


if __name__ == "__main__":
    print('Bot is running')
    bot = VkBot('token.json')
    for event in bot.longpoll.listen():
        bot.process_event(event)
